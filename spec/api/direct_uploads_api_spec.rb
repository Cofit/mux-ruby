=begin
# Mux Ruby - Copyright 2019 Mux Inc.
# NOTE: This file is auto generated. Do not edit this file manually.
=end

require 'spec_helper'
require 'json'

# Unit tests for MuxRuby::DirectUploadsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DirectUploadsApi' do
  before do
    # run before each test
    @instance = MuxRuby::DirectUploadsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DirectUploadsApi' do
    it 'should create an instance of DirectUploadsApi' do
      expect(@instance).to be_instance_of(MuxRuby::DirectUploadsApi)
    end
  end

  # unit tests for cancel_direct_upload
  # Cancel a direct upload
  # Cancels a direct upload and marks it as cancelled. If a pending upload finishes after this request, no asset will be created. This request will only succeed if the upload is still in the &#x60;waiting&#x60; state. 
  # @param upload_id ID of the Upload
  # @param [Hash] opts the optional parameters
  # @return [UploadResponse]
  describe 'cancel_direct_upload test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_direct_upload
  # Create a new direct upload URL
  # @param create_upload_request 
  # @param [Hash] opts the optional parameters
  # @return [UploadResponse]
  describe 'create_direct_upload test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_direct_upload
  # Retrieve a single direct upload&#39;s info
  # @param upload_id ID of the Upload
  # @param [Hash] opts the optional parameters
  # @return [UploadResponse]
  describe 'get_direct_upload test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_direct_uploads
  # List direct uploads
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of items to include in the response
  # @option opts [Integer] :page Offset by this many pages, of the size of &#x60;limit&#x60;
  # @return [ListUploadsResponse]
  describe 'list_direct_uploads test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
